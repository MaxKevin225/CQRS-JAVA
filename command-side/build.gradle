buildscript {
    repositories {
        mavenCentral()
    }


    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.6.RELEASE")
    }
}


apply plugin: 'idea'
//apply plugin: 'spring-boot'

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

jar {
    baseName = 'todo-command-side'
}

dependencies {
    compile project(':common-things')
    compile("org.axonframework:axon-amqp:2.4.1")
    compile("org.axonframework:axon-mongo:2.4.1")
    compile("org.springframework.boot:spring-boot-starter-actuator:1.2.6.RELEASE")
    compile("org.springframework.boot:spring-boot-starter-web:1.2.6.RELEASE")
    compile("org.springframework.boot:spring-boot-starter-amqp:1.2.6.RELEASE")
    compile('org.springframework.boot:spring-boot-starter-data-mongodb:1.2.6.RELEASE')
    testCompile("org.springframework.boot:spring-boot-starter-test:1.2.6.RELEASE")
}

task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
}

tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
}

// http://www.petrikainulainen.net/programming/gradle/getting-started-with-gradle-integration-testing/
check.dependsOn integrationTest
integrationTest.mustRunAfter test